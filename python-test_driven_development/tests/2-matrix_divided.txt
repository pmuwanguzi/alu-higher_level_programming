>>> from matrix_divided import matrix_divided

# Test with a valid matrix and divisor
>>> matrix = [[4, 8], [16, 32]]
>>> matrix_divided(matrix, 2)
[[2.0, 4.0], [8.0, 16.0]]

# Test with floats
>>> matrix = [[1.5, 2.5], [3.5, 4.5]]
>>> matrix_divided(matrix, 0.5)
[[3.0, 5.0], [7.0, 9.0]]

# Test with mixed integers and floats
>>> matrix = [[1, 2.5], [3.5, 4]]
>>> matrix_divided(matrix, 2)
[[0.5, 1.25], [1.75, 2.0]]

# Test for uneven row sizes
>>> matrix = [[1, 2], [3, 4, 5]]
>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
    ...
TypeError: Each row of the matrix must have the same size

# Test for invalid matrix type
>>> matrix = "not a matrix"
>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

# Test for invalid element type in matrix
>>> matrix = [[1, 2], ["3", 4]]
>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

# Test for invalid divisor
>>> matrix = [[1, 2], [3, 4]]
>>> matrix_divided(matrix, "2")
Traceback (most recent call last):
    ...
TypeError: div must be a number

# Test for division by zero
>>> matrix = [[1, 2], [3, 4]]
>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
    ...
ZeroDivisionError: division by zero
